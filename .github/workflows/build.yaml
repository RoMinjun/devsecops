name: CI/CD

on:
  push:
    branches:
      - week3
    paths-ignore:
      - '.github/**'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_LOGIN }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            rominjun/531630-app:latest

  scan:
    name: Scan
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Docker Scout CVEs
        uses: docker/scout-action@v1.18.2
        with:
          dockerhub-user: ${{ secrets.DOCKERHUB_LOGIN }}
          dockerhub-password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          command: cves
          image: rominjun/531630-app:latest
          only-severities: critical,high
          github-token: ${{ secrets.PAT_CONTENTS_WEEK3 }}
          exit-code: true
          exit-on: vulnerability

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_LOGIN }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Run container and smoke test
        run: |
          docker run -d --name 531630-app -p 80:5000 rominjun/531630-app:latest
          # give it a moment to start
          sleep 10
          curl http://localhost
          docker ps -aq | xargs docker stop | xargs docker rm

  deploy:
    name: Deploy
    runs-on: self-hosted
    needs: [test, scan]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy to Kubernetes
        run: |
          sudo kubectl delete deployment --all || true
          sudo kubectl apply -f ${{ github.workspace }}/kubernetes/deployment.yaml --force
          sudo kubectl apply -f ${{ github.workspace }}/kubernetes/nginx-service.yaml --force

  automated-api-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Postman CLI
        run: |
          curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
      - name: Login to Postman CLI
        run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}
      - name: Run API tests
        run: |
          postman collection run "${{ github.workspace }}/postman/collections/CI/CD.json" --integration-id "180718-${{ github.run_id }}"
